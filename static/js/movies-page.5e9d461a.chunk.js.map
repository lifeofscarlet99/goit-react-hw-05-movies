{"version":3,"file":"static/js/movies-page.5e9d461a.chunk.js","mappings":"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","sources":["API/get-search-movies.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","components/SearchBar/SearchBar.styled.js","components/SearchBar/SearchBar.jsx","pages/MoviesPage.js"],"sourcesContent":["async function getSearchMovies(query, page = 1) {\n  const key = \"d783920aea034ba2adae6031a0bf96c0\";\n  const url = `https://api.themoviedb.org/3/search/movie`;\n  const filter = `?api_key=${key}&query=${query}&language=en-US&page=${page}&include_adult=false`;\n\n  const response = await fetch(`${url}${filter}`);\n  const data = await response.json();\n\n  return data;\n}\n\nexport default getSearchMovies;\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty.js\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}","import styled from \"@emotion/styled\";\nimport {\n  secondBgColor,\n  secondTextColor,\n  mainHoverEfect,\n  accentBgColor,\n} from \"utilities/variables/css\";\n\nexport const FormSearch = styled.form`\n  display: flex;\n  justify-content: center;\n`;\n\nexport const InputSearch = styled.input`\n  width: 200px;\n  height: 30px;\n  padding: 0 10px 0 10px;\n  margin-right: 15px;\n  border: 1px solid ${secondBgColor};\n  outline: none;\n  @media (min-width: 768px) {\n    width: 800px;\n  }\n`;\n\nexport const ButtonSubmit = styled.button`\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  width: 100px;\n  height: 30px;\n  margin-bottom: 30px;\n  font-size: 15px;\n  font-family: inherit;\n  background-color: ${secondBgColor};\n  color: ${secondTextColor};\n  border: none;\n  cursor: pointer;\n  transition: background-color ${mainHoverEfect}, color ${mainHoverEfect};\n  :hover {\n    background-color: ${accentBgColor};\n    color: ${secondTextColor};\n  }\n  @media (min-width: 768px) {\n    width: 150px;\n  }\n`;\n","import { useLocation, useNavigate } from \"react-router-dom\";\nimport Container from \"components/Container\";\nimport { FormSearch, InputSearch, ButtonSubmit } from \"./SearchBar.styled\";\nimport { FaSearch } from \"react-icons/fa\";\n\nfunction SearchBar() {\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  function onSubmitForm(e) {\n    e.preventDefault();\n    const value = e.target.elements.query.value;\n\n    navigate({\n      ...location,\n      search: `query=${value}`,\n    });\n  }\n\n  return (\n    <Container>\n      <FormSearch onSubmit={onSubmitForm}>\n        <InputSearch type=\"text\" name=\"query\" />\n        <ButtonSubmit type=\"submit\">\n          <FaSearch />\n        </ButtonSubmit>\n      </FormSearch>\n    </Container>\n  );\n}\n\nexport default SearchBar;\n","import { useState, useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport getSearchMovies from \"API/get-search-movies\";\nimport SearchBar from \"components/SearchBar\";\nimport Container from \"components/Container\";\nimport MoviesList from \"components/MoviesList\";\n\nfunction MoviesPage() {\n  const { search } = useLocation();\n  const query = new URLSearchParams(search).get(\"query\") ?? \"\";\n\n  const [movies, setMovies] = useState(null);\n\n  useEffect(() => {\n    if (query !== \"\") {\n      getSearchMovies(query).then(({ results }) => {\n        const moviesArr = [];\n\n        results.map(\n          ({ id, original_title, poster_path, vote_average, vote_count }) => {\n            const movie = {\n              id,\n              title: original_title,\n              poster: poster_path,\n              voteAverage: vote_average,\n              voteCount: vote_count,\n            };\n\n            return moviesArr.push(movie);\n          }\n        );\n\n        setMovies(moviesArr);\n      });\n    }\n  }, [query]);\n\n  return (\n    <>\n      <SearchBar />\n      {movies && (\n        <Container isPadding>\n          <MoviesList movies={movies} />\n        </Container>\n      )}\n    </>\n  );\n}\n\nexport default MoviesPage;\n"],"names":["getSearchMovies","query","page","url","filter","fetch","response","json","data","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","FormSearch","styled","InputSearch","secondBgColor","ButtonSubmit","secondTextColor","mainHoverEfect","accentBgColor","location","useLocation","navigate","useNavigate","Container","onSubmit","e","preventDefault","elements","search","type","name","URLSearchParams","get","useState","movies","setMovies","useEffect","then","results","moviesArr","map","movie","id","title","original_title","poster","poster_path","voteAverage","vote_average","voteCount","vote_count","isPadding","MoviesList"],"sourceRoot":""}